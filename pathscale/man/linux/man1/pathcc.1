.\" '\" Copyright (C) 2007, 2008, 2009 PathScale, LLC.  All Rights Reserved.
.\" '\"
.\" '\" Copyright (C) 2006, 2007 QLogic Corp.  All Rights Reserved.
.\" '\"
.\" '\" Copyright (C) 2003, 2004, 2005, 2006 PathScale, Inc.  All Rights Reserved.
.\" '\"
.\" '\" Copyright (C) 2000, 2001 Silicon Graphics, Inc.  All Rights Reserved.
.\" '\" This information is free software. For details about the redistribution
.\" '\" and modification rights, see the copyright to the 0.9 SGI Open64 sgif90
.\" '\" compiler or the SGI Open64 sgicc compiler which releases on Linux
.\" '\" systems.
.\" '\"
.\" .ad l
.TH "pathcc" "1" "" "PathScale, LLC." "PathScale Compiler Suite"
.SH "NAME"
\fBpathcc\fR, \fBpathCC\fR
\- Invoke the PathScale(TM) C or C++ compiler
.SH "SYNOPSIS"
\fBpathcc\fR [\fI-option-list\fR] \fIfiles\fR
'\" \%[\fB\-\-\fR]
.PP 
\fBpathCC\fR [\fI-option-list\fR] \fIfiles\fR
.PP
.fi 
.SH "DESCRIPTION"
This man page describes the \fBpathcc\fR(1), 
and \fBpathCC\fR(1) commands.
The \fBpathcc\fR command invokes the PathScale(TM) C compiler and the
source preprocessor on source files that contain C code.
The \fBpathCC\fR command invokes the PathScale(TM) C++ compiler.
.PP
A complete list of available options can be found in the \fBeko\fR(7) man page.
.PP
Many options have an opposite ("no-") counterpart. This is represented
as \fB[no-]\fR in the option description and if used, will turn off or
prevent the action of the option. If no \fB[no-]\fR is shown, there
is no opposite option to the listed option.
.PP 
In addition to the options described here, the \fBpathcc/CC\fR compiler
supports the following GNU CC options (as described on the GCC man
page or at
\%\fB http://gcc.gnu.org/onlinedocs/gcc-3.3.1/gcc/\fR):
.IP \(bu 4
overall options
.IP \(bu 4
Invoking G++
.IP \(bu 4
C Dialect options
.IP \(bu 4
C++ Dialect options
.IP \(bu 4
Warning options
.IP \(bu 4
Preprocessor options
.IP \(bu 4
Assembler options
.IP \(bu 4
Link options
.IP \(bu 4
Directory options
.IP \(bu 4
Spec files
.IP \(bu 4
Target options
.IP \(bu 4
Submodel options
.IP \(bu 4
Environment variables
.PP 
\fBNOTE that the following GCC options are NOT supported:\fR
.IP \(bu 4
all optimization options (except the \fB\-O\fR option which is
described later in this man page)
.IP \(bu 4
all configuration dependent options
.IP \(bu 4
all code generation options
.IP \(bu 4
the \fB\-pipe\fR, \fBgcoff\fR, \fBgstabs\fR options
.PP 
Throughout this man page, the differences between
the C and C++ compilers are noted when appropriate.
When there is no difference, the phrases, \fIthe compiler\fR
or \fIthe C/C++ compiler\fR, refer to both compilers.
.PP 
By default, the compiler creates an executable
file named \fBa.out\fR.
Other files used and created by the compiler
are discussed under the FILES section of this man page.
See the \fBld\fR(1) man page for \%load\-time options.
.PP 
If conflicting options are specified, the option
specified last on the command line overrides the
previously specified option.
Exceptions to this rule are noted in the individual
option descriptions.
.PP 
Most \fB#pragma\fR directives override corresponding
command\-line options.
Exceptions to this rule are noted in the option descriptions
on this man page.
.PP 
Some command options, for example, \%\fB\-LIST\fR,
\%\fB\-LNO\fR, \%\fB\-MP\fR, \%\fB\-OPT\fR, and
\%\fB\-TENV\fR, accept several arguments and allow you to
specify a setting for each argument.
To specify multiple arguments,
either use colons to separate each argument or specify multiple
options on the command line.
For example, the following command lines are
equivalent:
.nf 
.in +5n
\fC
pathcc \-LIST:notes=ON:options=OFF b.c
pathcc \-LIST:notes=ON \-LIST:options=OFF b.c
\fR
.in
.fi 
.PP 
Unless otherwise specified in the option description,
the following options apply to the \fBpathcc\fR
and \fBpathCC\fR commands.
.TP 8
\fB\-###\fR
Like the \fB\-v\fR option, only nothing is run and args are quoted.
'\"
'\" ar
'\"
.TP 
\fB\-ar\fR
Creates an archive using \fBar\fR(1) instead of
a shared object or executable.
The name of the archive is specified by using
the \fB\-o\fR option.
Template entities required by the objects
being archived are instantiated before creating the archive.
The \fBpathCC\fR command implicitly passes the
\fB\-r\fR and \fB\-c\fR options of \fBar\fR to
\fBar\fR in addition to the name of the archive
and the objects being created.
Any other option that can be used in conjunction
with the \%\fB\-c\fR option of \fBar\fR can be passed
to \fBar\fR using \%\fB\-WR,option_name\fR.
.sp
NOTE: The objects specified with this option must
include all of the objects that will be included in the
archive.
Failure to do so may cause prelinker internal errors.
In the following example,
\fBliba.a\fR is an archive containing only
\fBa.o\fR, \fBb.o\fR, and \fBc.o\fR.
The \fBa.o\fR, \fBb.o\fR, and \fBc.o\fR objects
are prelinked to instantiate any required
template entities, and the \fBar \-r \-c \-v liba.a a.o b.o c.o\fR
command is executed.
All three objects must be specified with \fB\-ar\fR
even if only \fBb.o\fR needs to be replaced in \fBlib.a\fR.
.RS
.nf 
.in +5n
\fC
pathCC \-ar \-WR,\-v \-o liba.a a.o b.o c.o
\fR
.in
.fi 
.RE
.IP 
See the \fBld\fR(1) man page for more information about
shared libraries and archives.
'\"
'\" c
'\"
.TP 
\fB\-c\fR
Creates an intermediate object file for each named source file,
but does not link the object files.
The intermediate object file name corresponds
to the name of the source file; a \&\fB.o\fR suffix
is substituted for the suffix of the source file.
.sp
Because they are mutually exclusive,
do not specify this option with the \fB\-r\fR option.
.TP
\fB\-CG:\fR
Option group to control code generation. See \fBeko\fR(7) man page for more
information.
'\"
'\" clist
'\"
.TP 
\fB\-clist\fR
(\fBC\fR and \fBC++\fR only) Enables the C listing.
Specifying \%\fB\-clist\fR is the equivalent of specifying
\%\fB\-CLIST:=ON\fR.
.TP
\fB\-copyright\fR
Show the copyright for the compiler being used.
'\"
'\" D
'\"
.TP 
\fB\-D\fR \fIname=def\fR
.PD 0
.TP 
\fB\-D\fR \fIname\fR
Define \fIname\fR
to the macro preprocessor,
as if by \fB#define\fR.
If no definition is given, \fIname\fR is defined as \fB1\fR.
.PD
.TP
\fB\-dumpversion\fR
Show the version of the compiler being used, and nothing else.
'\"
'\" E
'\"
.TP 
\fB\-E\fR
Run only the preprocessor phase on the source files
and send the result to standard output.
The resultant output will contain line directives.
This option overrides the \%\fB\-nocpp\fR option.
.\" -- -fb-create
.TP 
\fB\-fb-create <\fR\fIpath>\fR
Used to specify that an instrumented executable program is to be generated.
Such an executable is suitable for producing feedback data files with the
specified prefix for use in feedback-directed compilation (FDO). The commonly
used prefix is <\fIfbdata\fR>. This is \fBOFF\fR by default. 
.\" ---------------------------------
'\"
'\" fb_opt
'\"
.TP 
\fB\-fb-opt\fR <\fIpath\fR>
Specify the directory that contains the
instrumentation output generated by compiling
with \fB\-fb-create\fR and then run your program
with a training input set.
This tells the compiler to use this information
to better optimize your program.
When the \fB\-c\fR option is used to produce an object
file that is eventually linked to form an instrumented
executable, the \fB\-fb-opt\fR option should also be specified.
.TP
\fB\-f[no-]exceptions\fR
\fB\-fexceptions\fR enables exception handling. This is the
default. \fB\-fno\-exceptions\fR disables exception handling.
.TP
\fB\-f[no-]fast\-math\fR
\fB\-ffast-math\fR improves FP speed by relaxing ANSI & IEEE
rules. \fB\-fno-fast\-math\fR tells the compiler to conform to ANSI
and IEEE math rules at the expense of speed.
.TP
\fB\-f[no-]gnu\-keywords\fR
Recognize \fItypeof\fR as a keyword. If \fB\-fno\-gnu\-keywords\fR is
used, do not recognize 'typeof' as a keyword. 
.TP
\fB\-f[no-]implicit-inline-templates\fR
\fB\-fimplicit-inline-templates\fR emits code for inline templates
instantiated implicitly. \fB\-fno\-implicit-inline-templates\fR tells
the compiler to never emit code for inline templates instantiated
implicitly.
.TP
\fB\-f[no-]implicit-templates\fR
The \fB\-fimplicit-templates\fR option emits code for non\-inline
templates instantiated implicitly. With \fB\-fno-implicit-templates\fR
the compiler will not emit code for non\-inline templates instantiated
implicitly.
.TP
\fB\-fno\-math\-errno \fR
Do not set ERRNO after calling math functions that are executed with a
single instruction, e.g. \fBsqrt\fR. A program that relies on IEEE
exceptions for math error handling may want to use this flag for speed
while maintaining IEEE arithmetic compatibility. This is implied by
\fB\-Ofast\fR. The default is \fB\-fmath-errno\fR.
.TP
\fB\-f[no\-]preprocessed\fR
\fB\-fpreprocessed\fR tells the preprocessor that input has already
been preprocessed. Using \fB\-fno\-preprocessed\fR tells preprocessor
that input has not already been preprocessed.
.TP
\fB\-f[no-]rtti\fR
Using \fB\-frtti\fR will generate runtime type information. The
\fB\-fno-rtti\fR option will not generate runtime type information.
.TP
\fB\-fpack-struct\fR  
Pack structure members together without holes.
.TP
\fB\-f[no-]unsafe-math-optimizations\fR 
\fB\-funsafe-math-optimizations\fR improves FP speed by violating ANSI
and IEEE rules. \fB\-fno-unsafe-math-optimizations\fR makes the
compilation conform to ANSI and IEEE math rules at the expense of
speed.
.TP
\fB\-fPIC\fR
Generate position independent code, if possible. It is \fBOFF\fR by default.
.TP
\fB\-fshared-data\fR
Mark data as shared rather than private.
'\"
'\" -ftest-coverage
'\" from gcc man pages
.TP
\fB\-ftest-coverage \fR
Create data files for the \fBpathcov\fR(1) code-coverage utility.
The data file names begin with the
name of your source file:
.RS
.TP
\fBSOURCENAME.bb\fR
A mapping from basic blocks to line numbers, which \fBpathcov\fR uses to
associate basic block execution counts with line numbers.
.TP
\fBSOURCENAME.bbg\fR
A list of all arcs in the program flow graph. This allows \fBpathcov\fR to
reconstruct the program flow graph, so that it can compute all basic
block and arc execution counts from the information in the
\fBSOURCENAME.da\fR file.
.RE
.IP
Use \fB\-ftest-coverage\fR with \fB\-fprofile-arcs\fR; the latter option adds
instrumentation to the program, which then writes execution counts to
another data file:
.RS
.TP
\fBSOURCENAME.da \fR
Runtime arc execution counts, used in conjunction with the arc
information in the file \fBSOURCENAME.bbg\fR.
.sp
Coverage data will map better to the source files if
\fB\-ftest-coverage\fR is used without optimization. See the \fBgcc man pages\fR 
for more information.
.RE
.IP
.TP
\fB\-fullwarn\fR  
Give more warnings, especially about missing prototypes.
.\" -- -fuse-cxa-atexit
.TP
\fB\-fuse-cxa-atexit\fR
(For C++ only) 
Register static destructors with \fB__cxa_atexit\fR instead of \fBatexit\fR.
.\" ---------------------------------
.TP
\fB\-fwritable-strings\fR  
Attempt to support writable-strings K&R style C.
'\"
'\" -g [n]
'\"
.TP 
\fB\-g\fR[\fIN\fR] 
Specify debugging support and to indicate the level of information
produced by the compiler. The supported values for \fBN\fR are:
.RS
.TP 4
\fB0\fR
No debugging information for symbolic debugging is produced. This is
the default.
.TP
\fB1\fR 
Produces minimal information, enough for making backtraces in parts of the
program that you don't plan to debug.  This is also the flag to use if
the user wants backtraces but does not want the overhead of full debug
information. This flag also causes \fB\-\-export\-dynamic\fR to be passed
to the linker.
.TP
\fB2\fR 
Produce additional debugging information for symbolic
debugging. Specifying \fB\-g\fR without a debug level is equivalent to
specifying \fB\-g2\fR.  If there is no explicit optimization flag
specified, the \fB\-O0\fR optimization level is used in order to
maintain the accuracy of the debugging information.  If optimization
options \fB\-O1\fR, \fB\-O2\fR, or \fB\-O3\fR are
explicitly specified, the optimizations are performed accordingly but
the accuracy of the debugging cannot be guaranteed. If \fB\-ipa\fR is
specified along with option \fB\-g2\fR, then IPA is disabled.
.RE
'\"
'\" -G
'\"
.TP
\fB\-G\fR[\fIN\fR]
(For MIPS only)
Assigns global and static objects of size \fIN\fR bytes or less into the
small data or bss sections \fB.sdata\fR and \fB.sbss\fR instead of the
normal data or bss sections.  Data in these sections is retrieved more
quickly using gp-relative addressing.
.IP
The default value of \fIN\fR is 8.
If more than 64K bytes are assigned to small data sections, the linker
will report an error, and you will need to use a smaller value
\fB\-G0\fR or \fB\-G4\R.
'\"
'\" help
'\"
.TP 8
\fB\-H\fR
Print the name of each header file used.
.TP
\fB\-help\fR
List all of the available options.
.TP
\fB\-help:\fR
Print list of possible options that contain a given string.
'\"
'\" I
'\"
.TP 
\fB\-I\fR \fIdir\fR
Searches directories for \fB#include\fR files
whose names do not begin with \fB/\fR.
Directories are searched in the following order:
directory of the \fIfile\fR argument, directories specified in
\%\fB\-I\fR options, and the standard directory (\fB/usr/include\fR).
'\"
'\" ignore-suffix
'\"
.TP 
\fB\-ignore-suffix\fR
Determine the language of the source file being
compiled by the command used to invoke the compiler.
By default, the language is determined by the
file suffixes (\&\fB.c\fR, \&\fB.cpp\fR, \&\fB.C\fR,
\&\fB.cxx\fR, \&\fB.f\fR, \&\fB.f90\fR, \&\fB.s\fR).
When the \%\fB\-ignore-suffix\fR option is specified,
the \fBpathcc\fR command invokes the C compiler.
.TP
\fB\-inline\fR  
Request inline processing.
'\"
'\" INLINE
'\"
.TP 8
\fB\-INLINE: \&...\fR
The inliner option group controls application of subprogram inlining
(also see the \%\fB\-IPA\fR description). See the \fBeko\fR(7) man
page for more information, including the individual options in this group.
'\"
'\" ipa
'\"
.TP 
\%\fB\-ipa\fR
Invokes inter\-procedural analysis (IPA). Specifying this option is
identical to specifying \%\fB\-IPA\fR or \%\fB\-IPA:\fR.  Default
settings for the individual IPA suboptions are used.
'\"
'\" IPA
'\"
.TP 
\fB\-IPA: \&...\fR
The inter\-procedural analyzer option group controls application of
inter\-procedural analysis and optimization, including inlining,
constant propagation, common block array padding, dead function
elimination, alias analysis, and others.  Specify \%\fB\-IPA\fR by
itself to invoke the inter-procedural analysis phase with default
options.  If you compile and link in distinct steps, you must specify
at least \%\fB\-IPA\fR for the compile step, and specify \%\fB\-IPA\fR
and the individual options in the group for the link step.  If you
specify \%\fB\-IPA\fR for the compile step, and do not specify
\%\fB\-IPA\fR for the link step, you will receive an error.  See the
\fBeko\fR(7) man page for more information, including the individual
options in this group.
.TP
\fB\-keep\fR  
Write all intermediate compilation files.
\fIfile\fB.s\fR contains the generated assembly language code.
\fIfile\fB.i\fR contains the preprocessed source code.
These files are retained after compilation is finished.
If IPA is in effect and you want to retain \fIfile\fB.s\fR,
you must specify \fB\-IPA:keeplight=OFF\fR
in addition to \fB\-keep\fR.
'\"
'\" L
'\"
.TP 
\fB\-L\fR \fIdirectory\fR
In XPG4 mode,
change the algorithm of searching for
libraries named in \%\fB\-L\fR operands
to look in the specified directory
before looking in the default location.
Directories specified in \%\fB\-L\fR options are searched in the
specified order.
Multiple instances of \%\fB\-L\fR options can be specified.
'\"
'\" l
'\"
.TP 
\fB\-l\fR \fIlibrary\fR
In XPG4 mode,
search the specified \fIlibrary\fR.
A library is searched when its name is encountered,
so the placement of a \%\fB\-l\fR operand is significant.
.TP
\fB\-LANG:\fR
Option group to control language features. See the
\fBeko\fR(7) man page for details.
.TP
\fB\-m32\fR
(For x86 only) Compile for 32-bit ABI, also known as x86 or IA32.
.TP
\fB\-m64\fR
(For x86 only) Compile for 64-bit ABI, also known as AMD64 or x86_64.
This is the default.
.TP
\fB\-n32\fR
(For MIPS only) Same as \fB\-mabi=n32\fR
.TP
\fB\-64\fR
(For MIPS only) Same as \fB\-mabi=64\fR
.TP
\fB\-mabi=(n32|64)\fR
(For MIPS only) Compiler will generate code for the selected ABI.
\fB\-mabi=n32\fR will compile for 32-bit ABI.
\fB\-mabi=64\fR will compile for 64-bit ABI, also known as n64.
The default ABI is 64-bit.
.TP
\fB\-march=<cpu-type>\fR
(For x86)  Compiler will optimize code for the selected cpu type:
\fBopteron, athlon, athlon64, athlon64fx, barcelona, em64t, pentium4, xeon, core, wolfdale, anyx86,
auto\fR.  \fBauto\fR means to optimize for the platform that the compiler is
running on, which the compiler determines by reading /proc/cpuinfo.
\fBanyx86\fR means a generic x86 processor.  Under 32-bit ABI, anyx86 is a
processor without SSE2/SSE3/3DNow!\ support; under 64-bit ABI it is a processor
with SSE2 but without SSE3/3DNow!.  \fBCore\fR refers to the Intel Core
Microarchitecture, used by 64-bit CPUs such as Woodcrest.  The default is
\fBauto\fR.
.IP
(For MIPS)  Compiler will optimize code for the selected CPU type:
\fBice9\fR (aka \fB5kf\fR or \fBmips5kf\fR), \fBtwc9a\fR, or \fBauto\fR.
\fBauto\fR means to optimize for the platform that the compiler is
running on, which the compiler determines by reading /proc/cpuinfo.
(Warning: \fBauto\fR is invalid on the cross compiler.)
The default is \fBmips5kf\fR.
.TP
\fB\-mcmodel=(small|medium)\fR
(For x86 only)
Select the code size model to use when generating offsets within
object files. Most programs will work with \fB\-mcmodel=small\fR
(using 32\-bit data relocations), but some need \fB\-mcmodel=medium\fR
(using 32\-bit relocations for code and 64\-bit relocations for data).
.TP
\fB\-mcpu=<cpu-type>\fR
Behaves like \fB-march\fR.  See \fB-march\fR.
.\" ---------------------------------
.\" -- -mno-sse2
.TP
\fB\-mno-sse2\fR
(For x86 only)
This flag is only applicable to -m32. \fB\-mno-sse2\fR is ignored
under \fB\-m64\fR with a warning.
.TP
\fB\-msse2\fR
(For x86 only)
Enable use of SSE2 instructions. This is the default under both
\fB\-m64\fR and \fB\-m32\fR.
.TP
\fB\-msse3\fR
(For x86 only)
Enable use of SSE3 instructions.  Default is \fBON\fR under \fB\-march=barcelona\fR, \fB\-march=em64t\fR, \fB\-march=wolfdale\fR
and \fB\-march=core\fR.  Otherwise, it is \fBOFF\fR by default.
.TP
\fB\-msse4a\fR
(For x86 only)
Enable use of SSE4A instructions.  Default is \fBOFF\fR.
.TP
\fB\-nobool\fR
Do not allow boolean keywords.
'\"
'\" nocpp
'\"
.TP 
\fB\-nocpp\fR
(\fBC\fR only)
Do not run the preprocessor phase on the source files.
This option is ignored when compiling a \fB.i\fR file.
'\"
'\" noinline
'\"
.TP 
\fB\-noinline\fR
Suppress expansion of inline functions.
When this option is specified, copies of inline
functions are emitted as static functions in
each compilation unit where they are called.
It is preferable to use \fB\-INLINE:=OFF\fR or
\fB\-IPA:inline=OFF\fR if you are using IPA (see \fBipa\fR(1)).
One of these options must be specified if you are using IPA.
.TP
\fB\-no-pathcc\fR
\fB\-no\-pathcc\fR turns off the __PATHSCALE__ and other predefined
preprocessor macros.
\"
'\" o
'\"
.TP 
\fB\-o\fR \fIoutfile\fR
When this option is used in conjunction with
the \fB\-c\fR option and a single
C source file, a relocatable object file
named \fIoutfile\fR is produced.
When specified with the \fB\-S\fR option, the \fB\-o\fR
option is ignored.
If \fB\-o\fR and \fB\-c\fR are not specified,
a file named \fBa.out\fR is produced.
.PD
'\"
'\" O
'\"
.TP 
\fB\-O\fR[\fIn\fR]
Specifies the basic level of optimization desired.
\fIn\fR can be one of the following:
.RS
.TP 
\fB0\fR
Turns off all optimizations. 
.TP 
\fB1\fR
Turns on local optimizations that can be done quickly.
.TP 
\fB2\fR
Turns on extensive optimization. This is the default.
The optimizations at this level are
generally conservative, in the sense that they are virtually always
beneficial, provide improvements commensurate to the compile time
spent to achieve them, and avoid changes that affect such things
as floating point accuracy.
.TP 
\fB3\fR
Turns on aggressive optimization.  The optimizations at this level are
distinguished from \%\fB\-O2\fR by their aggressiveness, generally
seeking highest\-quality generated code even if it requires extensive
compile time.  They may include optimizations that are generally
beneficial but may hurt performance.
.IP 
This includes but is not limited to turning on the Loop Nest
Optimizer, \fB\-LNO:opt=1\fR, and setting
\fB\-OPT:ro=1:IEEE_arith=2:Olimit=9000:reorg_common=ON\fR.
.TP
\fBs\fR
Specify that code size is to be given priority
in tradeoffs with execution time.
.RE
.IP
If no value is specified for \fIn\fR, 2 is assumed.
.RE
'\"
'\" Ofast
'\"
.TP 
\fB\-Ofast\fR
Equivalent to \fB-O3 -ipa -OPT:Ofast -fno-math-errno -ffast-math\fR. Use
optimizations selected to maximize performance.  Although the
optimizations are generally safe, they may affect floating point
accuracy due to rearrangement of computations. -OPT:Ofast effectively turns
on the following optimizations:
\fB\-OPT:ro=2:Olimit=0:div_split=on:alias=typed\fR.  \fB\-OPT:Ofast\fR
is also described in the \fBeko\fR(7) man page.
.sp
NOTE: \fB\-Ofast\fR enables \fB-ipa\fR (inter\-procedural analysis), which
places limitations on how libraries and \fB.o\fR files are built. See the
\fBeko\fR(7) man page for more information.
'\"
'\" OPT
'\"
.TP 
\%\fB\-OPT:...\fR
Controls miscellaneous optimizations.  This option overrides default
optimizations.  See the \fBeko\fR(7) man page for more information, 
including the individual options in this group.
'\"
'\" P
.TP
\fB\-pathcc\fR
Define __PATHCC__ and other macros.
'\" taken from "info gcc"
.TP
\fB\-pg\fR
Generate extra code to profile information suitable for the analysis
program \fBpathprof\fR(1). You must use this option when compiling the source
files you want data about, and you must also use it when linking. See
the \fBgcc man pages\fR for more information.
.TP
\fB\-r\fR  
Produce a relocatable \fB.o\fR and stop.
'\"
'\" S
'\"
.TP 8
\fB\-S\fR
Compile the specified source files and create symbolic
assembly language output files suffixed with \fB.s\fR.
.TP
\fB\-shared\fR  
DSO\-shared PIC code.
.TP
\fB\-shared\-libgcc\fR  
Force the use of the shared libgcc library.
'\"
'\" show
'\"
.TP 
\fB\-show\fR
Print the passes as they execute, with their arguments
and their input and output files.
.TP 
\fB\-show-defaults\fR
Show the default options in the compiler.defaults file.
.TP
\fB\-show0\fR  
Show what phases would be called, but don't invoke anything.
.TP
\fB\-showt\fR  
Show time taken by each phase.
.TP
\fB\--static\fR
Same as \fB\-static\fR.
.TP
\fB\-static\fR
Suppress dynamic linking at runtime for shared libraries; use
static linking instead.
.TP
\fB\-static-libgcc\fR  
Force the use of the static libgcc library.
.TP
\fB\-std=c89\fR 
\-std option for gcc/g++.
.TP
\fB\-std=c99\fR 
\-std option for gcc/g++.
.TP
\fB\-std=c9x\fR 
\-std option for gcc/g++.
.TP
\fB\-std=gnu89\fR 
\-std option for gcc/g++.
.TP
\fB\-std=gnu99\fR 
\-std option for gcc/g++.
.TP
\fB\-std=gnu9x\fR 
\-std option for gcc/g++.
.TP
\fB\-std=iso9899:1990\fR 
\-std option for gcc/g++.
.TP
\fB\-std=iso9899:199409\fR 
\-std option for gcc/g++.
.TP
\fB\-std=iso9899:1999\fR 
\-std option for gcc/g++.
.TP
\fB\-std=iso9899:199x\fR 
\-std option for gcc/g++.
.TP
\fB\-stdinc\fR  
Predefined include search path list.
.TP
\fB\-subverbose\fR 
Produce diagnostic output about the subscription management for the
compiler.
'\"
'\" TENV
'\"
.TP 8
\fB\-TENV: \&...\fR
The target environment option group controls the target environment
assumed and/or produced by the compiler.  See \fBTENV\fR in the
\fBeko\fR(7) man page for details about the individual
controls in this group.
.TP
\fB\-traditional\fR  
Attempt to support traditional K&R style C.
'\"
'\" U
'\"
.TP 
\%\fB\-U\fR \fIname\fR
Remove any initial definition of \fIname\fR.
'\"
'\" v
'\"
.TP 
\fB\-v\fR
Print (on standard error output) the commands executed to run
the stages of compilation. Also print the version number of
the compiler driver program and of the preprocessor and the 
compiler proper.
'\"
'\" version
'\"
.TP 
\fB\-version\fR
Display the version number of the compiler.
.TP
\fB\-VHO\fR
Option group to control vho lowering. See the \fBeko\fR(7) man
page.
'\"
'\" W
'\"
.TP 
\fB\-W\fR\fIc,arg1\fR\fB[,\fR\fIarg2\fR\fB...]\fR
Passes the argument(s) \fIargi\fR
to the compiler pass \fIc\fR
where \fIc\fR is one of [\fBpfibal\fR].
The \fBc\fR selects the compiler pass according to the following table:
.RS
.TP 30
\fBCharacter\fR
\fBName\fR
.TP 
\fBp\fR
preprocessor
.TP 
\fBf\fR
front-end
.TP 
\fBi\fR
inliner
.TP 
\fBb\fR
backend
.TP 
\fBa\fR
assembler
.TP 
\fBl\fR
loader
.PP 
Sets of these phase names can be used to select any combination of phases.
For example, \%\fB\-Wba,\-o,foo\fR passes the option \%\fB\-o foo\fR
to the \fBb\fR and \fBa\fR phases.
.RE
'\"
'\" w
'\"
.TP 
\fB\-w\fR
Suppresses warning messages.
.TP
\fB\-Wall\fR  
Enable most warning messages.        
.TP
\fB\-W[no\-]error\fR  
\fB\-Werror\fR makes all warnings into errors. \fB\-Wno\-error\fR
tells the compiler not to make all warnings into errors.
.TP
\fB\-W[no\-]uninitialized\fR  
\fB\-Wuninitialized\fR warns about unitialized automatic
variables. \fB\-Wno\-uninitialized\fR tells the compiler not warn about
unitialized automatic variables.
.TP
\fB\-Wswitch\-default\fR  
Warn when a switch statement has no default.
.TP
\fB\-WOPT:\fR
Specifies options that affect the global optimizer enabled at
\fB\-O2\fR or above. See the \fBeko\fR(7) man page.
.TP
\fB\-Wswitch\-enum\fR  
Warn when a switch statement is missing a case for an enum member.
'\"
'\" Y
'\"
.TP 
\fB\-Y\fR\fIc,path\fR
Sets the \fIpath\fR in which to find the associated phase,
using the same phase names as given in the
\%\fB\-W\fR option.
The following characters can also be specified:
.RS
.TP 
\fBI\fR
Specifies where to search for include files
.TP 
\fBS\fR
Specifies where to search for startup files (\fBcrt*.o\fR)
.TP 
\fBL\fR
Specifies where to search for libraries
.RE
.TP 
\fIfiles\fR
Indicates the source files to be compiled or assembled.
File suffixes and the commands that accept them are as follows:
.RS 10
.TP 15
\fBCommand\fR
\fBFile Suffix\fR
.TP 
\fBpathCC\fR
\&\fB.c\fR, \&\fB.C\fR, \&\fB.ii\fR, \&\fB.c++\fR,
\&\fB.C++\fR, \&\fB.cc\fR,
\&\fB.cxx\fR, \&\fB.CXX\fR, \&\fB.CC\fR,
\&\fB.cpp\fR, and \&\fB.CPP\fR
.TP 
\fBpathcc\fR
\&\fB.c\fR and \&\fB.i\fR
.RE
.SH "LOADER OPTIONS"
Other arguments are assumed to be either loader options,
object files, or libraries.
These files, together with the results of any
compilations specified, are loaded in the order
given, producing an executable program with
the default name \fBa.out.\fR
.SH "ENVIRONMENT VARIABLES"
For information on environment variables, see 
the \fBeko\fR(7) man page.
.SH "NOTES"
The compiler attempts to continue after finding semantic errors.
These errors may result in compiler internal errors.
.SH "EXAMPLES"
EXAMPLE 1:
Compile with extensive optimization enabled, allowing
transformations which affect floating point roundoff and overflow,
assuming strict ANSI C aliasing rules.
.nf 
.in +5n
\fC
pathcc \-O2 \-OPT:roundoff=2:alias=typed ...
\fR
.in
.fi 
.PP 
EXAMPLE 2:
Compile with aggressive optimization enabled, allowing
transformations with arbitrary effects on floating point roundoff
and overflow.
.nf 
.in +5n
\fC
pathcc \-O3 \-OPT:roundoff=3 ...
\fR
.in
.fi 
.SH "FILES"
The following is a file summary:
.TP 25
\fBFile\fR
\fBType\fR
.TP 
\fBa.out\fR
Default name of executable output file
.TP 
\fIfile\fB.a\fR
Object file archive.
.TP 
\fIfile\fB.B \fR
Intermediate file written by the front-end of the compiler.
To retain this file, specify the \%\fB\-keep\fR option.
.TP
\fIfile\fB.c\fR
C source file
.TP 
\fIfile\fB.i\fR
pre-processed C source file
.TP
\fIfile\fB.ii\fR
pre-processed C++ source file
.TP 
\fIfile\fB.o\fR
Object file
.TP 
\fIfile\fB.s\fR
Assembly language source file 
.TP 
\fIfile\fB.l\fR
Listing file
.TP 
\fBii_files\fR
Directory that contains \&\fB.ii\fR files
.TP 
\fB/usr/include\fR
Standard directory for \fB#include\fR files
.TP 
\fB/usr/bin/ld\fR
Loader
.TP 
\fB/tmp/cc*\fR
Temporary files
.SH "COPYRIGHT"
Copyright (C) 2007, 2008 PathScale, LLC.  All Rights Reserved.
.PP
Copyright (C) 2006, 2007 QLogic Corp.  All Rights Reserved.
.PP
Copyright (C) 2003, 2004, 2005, 2006 PathScale, Inc.  All Rights Reserved.
.PP
Copyright (C) 2000, 2001 Silicon Graphics, Inc.  All Rights Reserved.
.SH "SEE ALSO"
\fBpathscale_intro\fR(7), \fBpathf95\fR(1),
\fBassign\fR(1), \fBexplain\fR(1), \fBfsymlist\fR(1), \fBeko\fR(7),
\fBcompiler.defaults\fR(5), \fBpathopt2\fR(1)
.PP
PathScale Compiler Suite and Subscription Manager Install Guide
.PP
PathScale Compiler Suite User Guide
.PP
PathScale Compiler Suite Support Guide
.PP
PathScale Debugger User Guide
.PP
Online documentation available at http://www.pathscale.com/docs.html
